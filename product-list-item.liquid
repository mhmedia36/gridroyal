{% comment %}
  @param product_hover
         Uses a string to determine the product hover functionality
         Defaults to: 'image-flip'

  @param product_stock_level_threshold
         An integer representing the stock level in which the stock
         level overlay appears (when product_hover is 'stock-level')
         Defaults to: 1

  @param product_badges
         If true, the product will use stock level badges
         Defaults to: false

  @param product_icons
         If true, the product will use icons instead of text
         Defaults to: false

  @param product_vendor
         If true, shows the product vendor
         Defaults to: true

  @param product_attributes
        custom attributes to be applied to the product item
        Defaults to: blank
{% endcomment %}

{%- if product_hover == blank -%}
  {%- assign product_hover = 'image-flip' -%}
{%- endif -%}

{%- if product_stock_level_threshold == blank -%}
  {%- assign product_stock_level_threshold = 1 -%}
{%- endif -%}

{%- if product_badges == blank -%}
  {%- assign product_badges = false -%}
{%- endif -%}

{%- if product_icons == blank -%}
  {%- assign product_icons = false -%}
{%- endif -%}

{%- if product_vendor == blank -%}
  {%- assign product_vendor = true -%}
{%- endif -%}

{%- if product_variant.available -%}
  {%- assign product_variant = true -%}
{%- endif -%}

{% assign product_attributes = product_attributes | default: '' %}

{% assign item = product %}
{% if template contains 'search' %}
  {% assign item = item %}
{% endif %}

{% if product_hover == 'stock-level' and item.available %}
  {% assign total = 0 %}
  {% assign threshold = product_stock_level_threshold | times: 1 %}
  {% assign infinity = false %}
  {% for variant in item.variants %}
    {% if variant.inventory_management == null %}
      {% assign infinity = true %}
    {% elsif variant.inventory_management == '' %}
      {% assign infinity = true %}
    {% elsif variant.inventory_management == 'shopify' and variant.inventory_policy == 'continue' %}
      {% assign infinity = true %}
    {% elsif infinity == false %}
      {% capture temp %}{{ total | plus: variant.inventory_quantity }}{% endcapture %}
      {% assign total = temp | times: 1 %}
    {% endif %}
  {% endfor %}
  {% assign stockText = 'products.product.stock_indicator_message' | t: num: total %}
{% endif %}

<article
  class="product-list-item{% if product_hover == 'quick-shop' %} has-quick-shop{% endif %}"
  id="product-list-item-{{ item.id }}"
  data-product-id="{{ item.id }}"
  {{ product_attributes }}
>

  {% assign secondaryImage = false %}
  {% if item.media.size > 1 and product_hover == 'image-flip' %}
    {% assign secondaryImage = true %}

  {% endif %}

  <figure
    class="
      product-list-item-thumbnail
      {% if secondaryImage %}
        has-secondary-image
      {% endif %}
    "
    data-url="{{ item.url | within: collection }}"
    {% if secondaryImage %}
      {%
        render 'rimg',
        img: item.media[1].preview_image,
        alt: item.media[1].preview_image.alt,
        size: '600x600',
        crop:'center'
        background: true,
        lazy: true
      %}
    {% endif %}
  >
<!-- here is where you set the size of the img     -->
    <a href="{{ item.url | within: collection }}">
      {% if item.featured_media.preview_image %}
        {%
          render 'rimg',
          img: item.featured_media.preview_image,
          size: '600x600',
      	  crop:'center',
          lazy: true
        %}
      {% else %}
        {{ 'product-1' | placeholder_svg_tag: 'placeholder-svg' }}
      {% endif %}
    </a>

    {% if product_hover == 'quick-shop' %}
      <span
        class="quick-shop-modal-trigger"
        data-product-sha256="{{ item | json | sha256 }}"
        data-product-url="{{ item.url | within: collection }}"
      >
        {{ 'products.product.quick_shop_trigger_text' | t }}
      </span>
    {% elsif product_hover == 'stock-level' %}

      {% if item.available and infinity == false and total <= threshold %}
        <a class="product-list-item-inventory" href="{{ item.url }}">{{ stockText }}</a>
      {% endif %}

    {% endif %}

    {% if product_badges %}
      {% if item.available != true %}
        <span class="product-list-item-unavailable{% if product_icons %} product-icons{% endif %}" data-title="{{ 'products.product.sold_out' | t }}"></span>
      {% elsif item.compare_at_price_min > item.price_min %}
        <span class="product-list-item-on-sale{% if product_icons %} product-icons{% endif %}" data-title="{{ 'products.product.on_sale' | t }}"></span>
      {% endif %}
    {% endif %}
  </figure>

  <div class="product-list-item-details">
    {% if product_vendor %}
      <p class="product-list-item-vendor">{{ item.vendor | link_to_vendor }}</p>
    {% endif %}
    <a class="variant">{{ variant.option1 }}<a>
    <h2 class="product-list-item-title"><a href="{{ item.url | within: collection }}">{{ item.title }}</a></h2>
	
      <!-- shows sizes-->
      
      {% assign has_sizes = false %}
      {% for option in product.options %}
         {% if option == 'Size' %}
           {% assign has_sizes = true %}
         {% endif %}
      {% endfor %}
      
      {% if has_sizes == true %}
  		{% for option in product.options %}
    	{% if option == 'Size' %}
    
      {% comment %}
        Create a new variable called size_index which stores the option number of the "Size" option.
        For example, if "Size" is the first option, size_index = 1.
        If "Color" is the first option, and "Size" is the second option, size_index = 2.
      {% endcomment %}

      {% assign size_index = forloop.index0 %}


      {% for variant in product.variants %}
      
      
      {% capture size %}
          {{ variant.options[size_index] }}
        {% endcapture %}



        {% unless size_list contains size %}

          {% capture size_variants %}
            {{ size_list | append: size | append: " " }}
          {% endcapture %}

          {% assign size_list = size_variants %}

          {{ size_list }}

        {% endunless %}

      {% endfor %}
      
    {% endif %}
  {% endfor %}
{% endif %}
      
      
      
      
      
      
      
      
      
     

      
      <p class="product-list-item-price">
      
      {% if item.price_varies %}
        {% if item.price_varies %}{{ 'products.product.from' | t }}{% endif %}
        {% if item.compare_at_price_min > item.price_min %}
          <span class="money">{{ item.price_min | money }}</span>
          <span class="original money">{{ item.compare_at_price_min | money }}</span>
        {% else %}
          <span class="money">{{ item.price_min | money }}</span>
        {% endif %}
      {% else %}
        {% if item.compare_at_price_min > item.price_min %}
          <span class="money">{{ item.price_min | money }}</span>
          <span class="original money">{{ item.compare_at_price_min | money }}</span>
        {% else %}
          <span class="money">{{ item.price_min | money }}</span>
        {% endif %}
      {% endif %}
    </p>
    {% assign variant_for_unit_price = item.variants | sort: 'price' | first %}
    {% if variant_for_unit_price.unit_price %}
      {% comment %}Inject unit-price begin{% endcomment %}
      {% comment %}
        @param variant_for_unit_price
          Product variant for price
        @param tax_text
          String containing 'tax included' text
      {% endcomment %}
      
      {% capture total_quantity %}
        <span class="product-price__unit-price-total-quantity" data-unit-price-quantity>
          {{ variant_for_unit_price.unit_price_measurement.quantity_value }}{{ variant_for_unit_price.unit_price_measurement.quantity_unit }}
        </span>
      {% endcapture %}
      
      
      {% capture unit_price %}
        <span class="product-price__unit-price-amount money" data-unit-price-amount>
          {{ variant_for_unit_price.unit_price | money }}
        </span>
      {% endcapture %}
      {% capture unit_measure %}
        <span class="product-price__unit-price-measure" data-unit-price-measure>
          {%- if variant_for_unit_price.unit_price_measurement.reference_value != 1 -%}
            {{ variant_for_unit_price.unit_price_measurement.reference_value }}
          {%- endif %}
          {{ variant_for_unit_price.unit_price_measurement.reference_unit }}
        </span>
      {% endcapture %}
      
      <div
        class="
          product-price__unit-price
          {% unless variant_for_unit_price.unit_price_measurement %}hidden{% endunless %}
        "
        data-unit-price
      >
        {{ 'products.product.price_per_unit_html' | t: total_quantity: total_quantity, unit_price: unit_price, unit_measure: unit_measure | strip_newlines }}
      </div>
      
      {% assign variant_for_unit_price = blank %}
      {% comment %}Inject unit-price end{% endcomment %}

    {% endif %}
  </div>

</article>